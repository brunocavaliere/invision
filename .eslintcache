[{"/home/brunocavaliere/projects/jobs/invision/src/App.tsx":"1","/home/brunocavaliere/projects/jobs/invision/src/pages/SignIn/styles.ts":"2","/home/brunocavaliere/projects/jobs/invision/src/pages/SignIn/index.tsx":"3","/home/brunocavaliere/projects/jobs/invision/src/styles/global.ts":"4","/home/brunocavaliere/projects/jobs/invision/src/components/Carousel/index.tsx":"5","/home/brunocavaliere/projects/jobs/invision/src/components/Carousel/styles.ts":"6","/home/brunocavaliere/projects/jobs/invision/src/components/Input/styles.ts":"7","/home/brunocavaliere/projects/jobs/invision/src/components/Input/index.tsx":"8","/home/brunocavaliere/projects/jobs/invision/src/components/Button/styles.ts":"9","/home/brunocavaliere/projects/jobs/invision/src/components/Button/index.tsx":"10","/home/brunocavaliere/projects/jobs/invision/src/pages/Register/index.tsx":"11","/home/brunocavaliere/projects/jobs/invision/src/pages/Register/styles.ts":"12","/home/brunocavaliere/projects/jobs/invision/src/index.tsx":"13","/home/brunocavaliere/projects/jobs/invision/src/utils/getValidationErrors.ts":"14"},{"size":281,"mtime":1611701175051,"results":"15","hashOfConfig":"16"},{"size":2773,"mtime":1611791251132,"results":"17","hashOfConfig":"18"},{"size":2929,"mtime":1611800226645,"results":"19","hashOfConfig":"16"},{"size":1115,"mtime":1611689990715,"results":"20","hashOfConfig":"21"},{"size":1067,"mtime":1611700489268,"results":"22","hashOfConfig":"16"},{"size":406,"mtime":1611697930544,"results":"23","hashOfConfig":"21"},{"size":918,"mtime":1611783858599,"results":"24","hashOfConfig":"25"},{"size":1264,"mtime":1611859127273,"results":"26","hashOfConfig":"16"},{"size":334,"mtime":1611700174028,"results":"27","hashOfConfig":"21"},{"size":314,"mtime":1611699271539,"results":"28","hashOfConfig":"16"},{"size":3393,"mtime":1611856797971,"results":"29","hashOfConfig":"16"},{"size":2738,"mtime":1611856512870,"results":"30","hashOfConfig":"16"},{"size":198,"mtime":1611680269191,"results":"31","hashOfConfig":"16"},{"size":322,"mtime":1611780949604,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x7l0wh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"swlcu9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16tsxb2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"50rvyo",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/brunocavaliere/projects/jobs/invision/src/App.tsx",[],"/home/brunocavaliere/projects/jobs/invision/src/pages/SignIn/styles.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/pages/SignIn/index.tsx",["63"],"/home/brunocavaliere/projects/jobs/invision/src/styles/global.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/components/Carousel/index.tsx",[],"/home/brunocavaliere/projects/jobs/invision/src/components/Carousel/styles.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/components/Input/styles.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/components/Input/index.tsx",["64"],"import React, {\n  InputHTMLAttributes,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  dataTestid: string;\n  name: string;\n  label: string;\n}\n\nconst Input: React.FC<InputProps> = ({\n  dataTestid,\n  name,\n  label,\n  placeholder,\n  type,\n}) => {\n  const inputRef = useRef(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} htmlFor={name}>\n      {label}\n      <input\n        data-testid={dataTestid}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        onFocus={() => setIsFocused(true)}\n        onBlur={handleInputBlur}\n        placeholder={placeholder}\n        type={type}\n      />\n\n      {error && <p data-testid=\"input-error\">{error}</p>}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/brunocavaliere/projects/jobs/invision/src/components/Button/styles.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/components/Button/index.tsx",["65"],"/home/brunocavaliere/projects/jobs/invision/src/pages/Register/index.tsx",["66"],"/home/brunocavaliere/projects/jobs/invision/src/pages/Register/styles.ts",[],"/home/brunocavaliere/projects/jobs/invision/src/index.tsx",[],["67","68","69","70","71"],"/home/brunocavaliere/projects/jobs/invision/src/utils/getValidationErrors.ts",["72"],{"ruleId":"73","severity":1,"message":"74","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":21},{"ruleId":"73","severity":1,"message":"77","line":2,"column":3,"nodeType":"75","messageId":"76","endLine":2,"endColumn":22},{"ruleId":"73","severity":1,"message":"78","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":21},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"73","severity":1,"message":"89","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'FormHandles' is defined but never used.","Identifier","unusedVar","'InputHTMLAttributes' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","lines-around-directive",["90"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'ValidationError' is defined but never used.","padding-line-between-statements"]